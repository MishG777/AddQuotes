{"ast":null,"code":"var _jsxFileName = \"D:\\\\UDEMY_REACT_JS_COURSE\\\\Section_20_practice_reactRouter\\\\src\\\\pages\\\\NewQuote.js\",\n  _s = $RefreshSig$();\nimport { useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport QuoteForm from \"../components/quotes/QuoteForm\";\nimport useHttp from \"../hooks/use-http\"; //imported from custom hook component\nimport { addQuote } from \"../lib/api\"; // in /lib/api are functions where we send http requests\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NewQuote = () => {\n  _s();\n  const {\n    sendRequest,\n    status,\n    data\n  } = useHttp(addQuote);\n  const history = useHistory();\n  useEffect(() => {\n    if (status === \"completed\") {\n      history.push(\"/quotes\");\n    }\n  }, [status, history]);\n  const addQuoteHandler = quoteData => {\n    sendRequest(quoteData);\n  };\n  return /*#__PURE__*/_jsxDEV(QuoteForm, {\n    isLoading: status === \"pending\",\n    onAddQuote: addQuoteHandler\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(NewQuote, \"x2T6mzv38xHjrNlZM5OLkWMAkL8=\", false, function () {\n  return [useHttp, useHistory];\n});\n_c = NewQuote;\nexport default NewQuote;\nvar _c;\n$RefreshReg$(_c, \"NewQuote\");","map":{"version":3,"names":["useEffect","useHistory","QuoteForm","useHttp","addQuote","NewQuote","sendRequest","status","data","history","push","addQuoteHandler","quoteData"],"sources":["D:/UDEMY_REACT_JS_COURSE/Section_20_practice_reactRouter/src/pages/NewQuote.js"],"sourcesContent":["import { useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport QuoteForm from \"../components/quotes/QuoteForm\";\r\n\r\nimport useHttp from \"../hooks/use-http\"; //imported from custom hook component\r\nimport { addQuote } from \"../lib/api\"; // in /lib/api are functions where we send http requests\r\n\r\nconst NewQuote = () => {\r\n  const { sendRequest, status, data } = useHttp(addQuote);\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (status === \"completed\") {\r\n      history.push(\"/quotes\");\r\n    }\r\n  }, [status, history]);\r\n\r\n  const addQuoteHandler = (quoteData) => {\r\n    sendRequest(quoteData);\r\n  };\r\n\r\n  return (\r\n    <QuoteForm isLoading={status === \"pending\"} onAddQuote={addQuoteHandler} />\r\n  );\r\n};\r\n\r\nexport default NewQuote;\r\n"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,SAASC,UAAU,QAAQ,kBAAkB;AAC7C,OAAOC,SAAS,MAAM,gCAAgC;AAEtD,OAAOC,OAAO,MAAM,mBAAmB,CAAC,CAAC;AACzC,SAASC,QAAQ,QAAQ,YAAY,CAAC,CAAC;AAAA;AAEvC,MAAMC,QAAQ,GAAG,MAAM;EAAA;EACrB,MAAM;IAAEC,WAAW;IAAEC,MAAM;IAAEC;EAAK,CAAC,GAAGL,OAAO,CAACC,QAAQ,CAAC;EACvD,MAAMK,OAAO,GAAGR,UAAU,EAAE;EAE5BD,SAAS,CAAC,MAAM;IACd,IAAIO,MAAM,KAAK,WAAW,EAAE;MAC1BE,OAAO,CAACC,IAAI,CAAC,SAAS,CAAC;IACzB;EACF,CAAC,EAAE,CAACH,MAAM,EAAEE,OAAO,CAAC,CAAC;EAErB,MAAME,eAAe,GAAIC,SAAS,IAAK;IACrCN,WAAW,CAACM,SAAS,CAAC;EACxB,CAAC;EAED,oBACE,QAAC,SAAS;IAAC,SAAS,EAAEL,MAAM,KAAK,SAAU;IAAC,UAAU,EAAEI;EAAgB;IAAA;IAAA;IAAA;EAAA,QAAG;AAE/E,CAAC;AAAC,GAjBIN,QAAQ;EAAA,QAC0BF,OAAO,EAC7BF,UAAU;AAAA;AAAA,KAFtBI,QAAQ;AAmBd,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module"}